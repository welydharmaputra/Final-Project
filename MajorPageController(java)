package sample;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.text.Text;
import javafx.stage.Stage;


import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ResourceBundle;

public class MajorPageController extends DBConnect implements Initializable {


    public static String tempDate;
    public static String tempTitle;
    public static String tempNotes;


    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyy");
    LocalDate date = LocalDate.now();

    @FXML
    Text majorText;

    @FXML
    TextField titleText;

    @FXML
    private TableView<MajorNotes> tableView;
    @FXML
    private TableColumn<MajorNotes,String> dateCol;
    @FXML
    private TableColumn<MajorNotes,String> titleCol;

    ObservableList<MajorNotes> noteList = FXCollections.observableArrayList();

    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {
        MajorPageController.tempDate = "";
        MajorPageController.tempTitle = "";
        MajorPageController.tempNotes = "";
        loadData();
        majorText.setText(Main.major);
    }
    // THIS FUNCTION IS FOR GO BACK TO
    public void backToHome() throws IOException {
        majorText.setText("");


        Parent root = FXMLLoader.load(getClass().getResource("home.fxml"));
        Main.primaryStage.setTitle("NOTES");
        Main.primaryStage.setScene(new Scene(root, 600, 400));
        Main.primaryStage.setResizable(false);
        Main.primaryStage.show();
    }
    // THIS FUNCTION IS FOR MAKING A NOTE
    public void addNote(){

        insertNote(Main.major , dtf.format(date) , titleText.getText() );
        titleText.setText("");
        loadData();
        //insert title and date to the corresponding table
    }
    // THIS FUNCTION IS FOR DELETING A NOTE
    public void deleteNote(){
        String title = tableView.getSelectionModel().getSelectedItem().getTitle();
        tableView.getItems().remove(tableView.getSelectionModel().getSelectedItem());
        String sql = String.format("delete from %s where title = '%s' " , Main.major , title);


        try {
            st = con.createStatement();
            st.executeUpdate(sql);
            System.out.println("Row Deleted");
        } catch (Exception e){
            System.out.println(e);
        }
    }
    // THIS FUNCTION IS FOR FIND DATA AND OPEN THE NOTE
    public void openNote() throws IOException {
        tempDate = tableView.getSelectionModel().getSelectedItem().getDate();
        tempTitle = tableView.getSelectionModel().getSelectedItem().getTitle();
        String major = Main.major+"_"+Main.activeUser;
        String sql = String.format("select * from %s where title = '%s' ", major , tempTitle);
        try{
            rs = st.executeQuery(sql);
            if(rs.next()){
                tempNotes = rs.getString("notes");

            }
        }catch(Exception e){
            e.printStackTrace();
        }
        Parent root = FXMLLoader.load(getClass().getResource("Notes.fxml"));
        Main.primaryStage.setTitle("NOTES");
        Main.primaryStage.setScene(new Scene(root, 600, 400));
        Main.primaryStage.setResizable(false);
        Main.primaryStage.show();


    }
    // THIS FUNCTION IS FOR TO LOAD THE NOTE DATA
    public void loadData(){
        tableView.getItems().clear();
        String major = Main.major+"_"+Main.activeUser;
        try {
            Connection con = DBConnect.getConnection();
            String sql = String.format("select * from %s" , major);
            ResultSet rs =  con.createStatement().executeQuery(sql);
            while (rs.next()) {
                noteList.add(new MajorNotes(rs.getString("date") , rs.getString("title") , rs.getString("notes")));            }
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        }

        dateCol.setCellValueFactory(new PropertyValueFactory<MajorNotes, String>("date"));
        titleCol.setCellValueFactory(new PropertyValueFactory<MajorNotes, String>("title"));




        tableView.setItems(noteList);
    }

}
